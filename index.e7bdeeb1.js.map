{"mappings":"ACIA,MAAM,IAAI,CAFK,SAAS,gBAAgB,CAAC,aAEtB,OAAO,CAAC,SAAC,CAAA,CAAO,CAAnC,EACE,EAAM,gBAAgB,CAAC,QAAS,eAM1B,EAgBA,EAdN,CAFM,EAAO,MAAM,IAAI,CAAC,SAAS,gBAAgB,CAAC,oBAE7C,IAAI,CAAC,SAAC,CAAA,CAAG,CAAd,EACE,IAAM,EAAQ,EAAE,QAAQ,CARX,EAQoB,CAAC,WAAW,CAAC,IAAI,GAC5C,EAAQ,EAAE,QAAQ,CATX,EASoB,CAAC,WAAW,CAAC,IAAI,GAE5C,EAAU,WAAW,EAAM,OAAO,CAAC,aAAc,KACjD,EAAU,WAAW,EAAM,OAAO,CAAC,aAAc,YAEvD,AAAI,AAAC,MAAM,IAAa,MAAM,GAGrB,EAAM,aAAa,CAAC,GAFpB,EAAU,CAIrB,GAEM,EAAO,SAAS,aAAa,CAAC,SAEpC,EAAK,OAAO,CAAC,SAAC,CAAd,EAAsB,OAAA,EAAK,WAAW,CAAC,E,EAtBvC,EACF","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nvar titles = document.querySelectorAll(\"table th\");\nArray.from(titles).forEach(function(title, text) {\n    title.addEventListener(\"click\", function() {\n        sortElements(text);\n    });\n});\nfunction sortElements(element) {\n    var rows = Array.from(document.querySelectorAll(\"table tbody tr\"));\n    rows.sort(function(a, b) {\n        var cellA = a.children[element].textContent.trim();\n        var cellB = b.children[element].textContent.trim();\n        var numberA = parseFloat(cellA.replace(/[^0-9.-]+/g, \"\"));\n        var numberB = parseFloat(cellB.replace(/[^0-9.-]+/g, \"\"));\n        if (!isNaN(numberA) && !isNaN(numberB)) return numberA - numberB;\n        else return cellA.localeCompare(cellB);\n    });\n    var body = document.querySelector(\"tbody\");\n    rows.forEach(function(row) {\n        return body.appendChild(row);\n    });\n}\n\n//# sourceMappingURL=index.e7bdeeb1.js.map\n","'use strict';\n\nconst titles = document.querySelectorAll('table th');\n\nArray.from(titles).forEach((title, text) => {\n  title.addEventListener('click', () => {\n    sortElements(text);\n  });\n});\n\nfunction sortElements(element) {\n  const rows = Array.from(document.querySelectorAll('table tbody tr'));\n\n  rows.sort((a, b) => {\n    const cellA = a.children[element].textContent.trim();\n    const cellB = b.children[element].textContent.trim();\n\n    const numberA = parseFloat(cellA.replace(/[^0-9.-]+/g, ''));\n    const numberB = parseFloat(cellB.replace(/[^0-9.-]+/g, ''));\n\n    if (!isNaN(numberA) && !isNaN(numberB)) {\n      return numberA - numberB;\n    } else {\n      return cellA.localeCompare(cellB);\n    }\n  });\n\n  const body = document.querySelector('tbody');\n\n  rows.forEach((row) => body.appendChild(row));\n}\n"],"names":["Array","from","document","querySelectorAll","forEach","title","text","addEventListener","rows","body","sort","a","b","cellA","children","textContent","trim","cellB","numberA","parseFloat","replace","numberB","isNaN","localeCompare","querySelector","row","appendChild"],"version":3,"file":"index.e7bdeeb1.js.map"}